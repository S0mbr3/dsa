#+title Queue linked list overview
#+STARTUP: overview
* Queue
 A queue is a FIFO (First in First out) linked list data sctructure. With a O(1) time complexity they are very efficient to push and pop data with high performance due to it's simplicity.
** FullCode
 #+begin_src typescript :tangle ./Queue.ts
 type Node<T> = {
     value: T;
     next?: Node<T>
 }

 export default class Queue<T> {
     public length: number;
     private head?: Node<T>;
     private tail?: Node<T>;

     constructor() {
 	this.length = 0;
 	this.head = this.tail = undefined;
     }

     enqueue(item: T): void {
 	const node = {value: item} as Node<T>;
 	this.length++;
 	if(!this.tail){
 	    this.tail = this.head = node;
 	    return;
 	}

 	this.tail.next = node;
 	this.tail = node;
     }

     deque(): T | undefined {
 	if(!this.head) {
 	    return undefined;
 	}
 	this.length--;
 	const temp_head = this.head
 	this.head = this.head.next;
 	temp_head.next = undefined;

 	if(this.length === 0){
 	    this.tail = undefined;
 	}

 	return temp_head.value;
     }

     peek(): T | undefined {
 	return this.head?.value;
     }
 }
 #+end_src
